@page "/"
@inject IDataService DataService

<div class="grid">
    <QuickGrid Items="@FilteredItems" ResizableColumns="true" Pagination="@pagination">
        <TemplateColumn Title="Code"><img class="flag" src="flags/@(context.Code).svg" /></TemplateColumn>
        <PropertyColumn Property="@(c => c.Name)" Sortable="true">
            <ColumnOptions>
                <input type="search" @bind="nameFilter" @bind:event="oninput" />
            </ColumnOptions>
        </PropertyColumn>
        <PropertyColumn Property="@(c => c.Medals.Gold)" Sortable="true" Align="Align.Right" />
        <PropertyColumn Property="@(c => c.Medals.Silver)" Sortable="true" Align="Align.Right" />
        <PropertyColumn Property="@(c => c.Medals.Bronze)" Sortable="true" Align="Align.Right" />
        <PropertyColumn Property="@(c => c.Medals.Total)" Sortable="true" Align="Align.Right" IsDefaultSort="SortDirection.Descending" />
    </QuickGrid>
    <Paginator Value="@pagination" />
</div>

@code {
    PaginationState pagination = new PaginationState { ItemsPerPage = 15 };
    IQueryable<Country> items;
    string nameFilter = string.Empty;

    IQueryable<Country> FilteredItems => items.Where(x => x.Name.Contains(nameFilter, StringComparison.CurrentCultureIgnoreCase));

    protected override async Task OnInitializedAsync()
    {
        items = (await DataService.GetCountriesAsync(0, null, null, true, CancellationToken.None)).Items.AsQueryable();
    }
}
