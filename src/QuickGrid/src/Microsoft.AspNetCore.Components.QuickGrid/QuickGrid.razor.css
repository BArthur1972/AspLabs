th {
    position: relative; /* So that column-options appears next to it */
}

.col-header-content {
    /* We want the th elements to be display:flex, but they also have to be display:table-cell to avoid breaking the layout.
       So .col-header-content is an immediate child with display:flex. */
    position: relative;
    display: flex;
    align-items: center;
}

/* Deep to make it easy for people adding a sort-indicator element in a custom HeaderTemplate */
th ::deep .sort-indicator {
    /* Preset width so the column width doen't change as the sort indicator appears/disappears */
    width: 1rem;
    text-align: center;
}

.col-sort-asc ::deep .sort-indicator:before {
    content: '\2B9F';
}

.col-sort-desc ::deep .sort-indicator:before {
    content: '\2B9D';
}

/* Deep to make it easy for people adding a col-options-button element in a custom HeaderTemplate */
th ::deep .col-options-button {
    border: none;
    background: none;
}

    th ::deep .col-options-button:before {
        content: '\22ee';
    }

.column-options {
    position: absolute;
    background: white;
    border: 1px solid silver;
    right: 0;
    padding: 1rem;
    z-index: 1;
}

.column-width-draghandle {
    width: 1rem;
}

th.column-width-draghandle {
    cursor: ew-resize;
}

th.column-width-draghandle:after {
    content: ' ';
    border-left: 1px solid silver;
    position: absolute;
    top: 5px;
    bottom: 5px;
    left: 0.5rem;
}

th:last-of-type.column-width-draghandle, td:last-of-type.column-width-draghandle {
    display: none;
}

td.col-justify-center {
    text-align: center;
}

td.col-justify-end {
    text-align: right;
}

/* Unfortunately we can't use the :dir pseudoselector due to lack of browser support. Instead we have to rely on
    the developer setting <html dir="rtl"> to detect if we're in RTL mode. */
html[dir=rtl] td.col-justify-end {
    text-align: left;
}

html[dir=rtl] .column-width-draghandle {
    right: unset;
    left: -0.5rem;
}

html[dir=rtl] .column-options {
    right: unset;
    left: 0;
}
